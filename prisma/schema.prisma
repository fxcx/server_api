// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  firstName String
  lastName  String
  password  String
  birthday  String
  address   String
  isAdmin   Boolean   @default(false)
  role      String
  createdAt DateTime  @default(now())
  updatedAt DateTime
  deleteAt  DateTime?
  Pedido    Pedido[]
  Pago      Pago[]
  @@map("users")
}


model Product {
  id         Int       @id @default(autoincrement())
  name       String
  price      Float
  stock      Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime
  category   String[]  // un arrglo de categorias / ahorrarme una tabla
  Pedido     Pedido?   @relation(fields: [pedidoId], references: [id])
  pedidoId   Int?
  @@map("product")
}

model Pedido {
  id         Int       @id @default(autoincrement())
  estado     String
  total      Float
  metodoPago String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime
  deleteAt   DateTime?
  client     User      @relation(fields: [clientId], references: [id])
  clientId   Int
  productos  Product[]
  Pago       Pago[]
  Envio      Envio[]
  @@map("pedido")
}

model Pago {
  id         Int       @id @default(autoincrement())
  monto      Float      
  metodoPago String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime
  deleteAt   DateTime?
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  pedido     Pedido    @relation(fields: [pedidoId], references: [id])
  pedidoId   Int
  @@map("pago")
}

model Envio {
  id        Int       @id @default(autoincrement())
  estado    String // Agrega el estado del env√≠o (pendiente, en camino, entregado, etc.)
  address   String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime
  deletedAt DateTime?
  Pedido    Pedido?   @relation(fields: [pedidoId], references: [id])
  pedidoId  Int
  @@map("envio")
}
